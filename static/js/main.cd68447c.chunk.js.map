{"version":3,"sources":["routes/Route.js","pages/SignIn/styles.js","services/history.js","utils/documentTitle.js","pages/SignIn/index.js","services/api.js","components/Tweet/styles.js","components/Tweet/index.js","pages/TimeLine/styles.js","utils/ws.js","pages/TimeLine/index.js","routes/index.js","style/globalStyle.js","index.js","App.js","images/like.svg","images/liked.svg"],"names":["RouteWrapper","Component","component","isLogged","rest","signed","localStorage","getItem","to","render","props","Container","styled","div","history","createBrowserHistory","documentTitle","title","document","SignIn","useState","error","setError","src","alt","onSubmit","name","setItem","push","placeholder","type","app","axios","create","baseURL","li","Button","button","liked","like","Tweet","tweet","setLiked","useEffect","userLikes","JSON","parse","length","find","item","_id","alreadyLiked","author","split","content","onClick","a","async","stringify","api","post","likes","io","socket","setTimeout","console","log","id","TimeLine","tweets","setTweets","setTweet","getTweets","get","response","data","on","onKeyDown","keyCode","value","maxLength","onChange","e","target","map","key","routes","path","exact","from","createGlobalStyle","ReactDOM","basename","process","getElementById","module","exports"],"mappings":"6MAGe,SAASA,EAAT,GAIX,IAHSC,EAGV,EAHDC,UACAC,EAEC,EAFDA,SACGC,EACF,wCACKC,EAASC,aAAaC,QAAQ,eAEpC,OAAKF,GAAUF,EACN,kBAAC,IAAD,CAAUK,GAAG,uBAGlBH,IAAWF,EACN,kBAAC,IAAD,CAAUK,GAAG,+BAGf,kBAAC,IAAD,iBAAWJ,EAAX,CAAiBK,OAAQ,SAAAC,GAAK,OAAI,kBAACT,EAAcS,O,2mDChBnD,IAAMC,EAAYC,IAAOC,IAAV,K,OCEPC,EAFCC,cCDDC,EADO,SAAAC,GAAK,OAAKC,SAASD,MAAT,UAAoBA,EAApB,eCSjB,SAASE,IACtBH,EAAc,SADiB,MAGLI,mBAAS,MAHJ,mBAGxBC,EAHwB,KAGjBC,EAHiB,KAgB/B,OACE,kBAACX,EAAD,KACE,6BACE,yBACEY,IAAI,yEACJC,IAAI,YAGN,kBAAC,IAAD,CAAMC,SAnBZ,YAAiC,IAATC,EAAQ,EAARA,KACtB,IAAKA,EAGH,OAFAJ,EAAS,8CAEF,EAGThB,aAAaqB,QAAQ,cAAeD,GAEpCZ,EAAQc,KAAK,aAWP,kBAAC,IAAD,CAAOF,KAAK,OAAOG,YAAY,qBAAkBC,KAAK,SACrDT,GAAS,2BAAIA,GACd,4BAAQS,KAAK,UAAb,a,4BC9BKC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,6C,4vCCEJ,IAAMvB,EAAYC,IAAOuB,GAAV,KAkCTC,EAASxB,IAAOyB,OAAV,KAyBG,SAAA3B,GAAK,OAAKA,EAAM4B,MAAQA,IAAQC,OC1DvC,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAAS,EACbrB,oBAAS,GADI,mBAChCkB,EADgC,KACzBI,EADyB,KA2CvC,OAhBAC,qBAAU,kBAxBV,WACE,IAAIC,EAAYtC,aAAaC,QAAQ,gBAErC,IAAKqC,EAGH,OAFAtC,aAAaqB,QAAQ,eAAgB,MAE9Be,GAAS,GAKlB,KAFAE,EAAYC,KAAKC,MAAMF,IAERG,OACb,OAAOL,GAAS,GAGlB,IAAMM,EAAOJ,EAAUI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQT,EAAMS,OAEvD,OAIOR,IAJFM,GAOSG,KAAgB,IAiB9B,kBAAC,EAAD,KACE,gCACE,yBACE5B,IAAG,6CACDkB,EAAMW,OAAOC,MAAM,KAAK,IAE1B7B,IAAKiB,EAAMW,SAEZX,EAAMW,QAET,2BAAIX,EAAMa,SACV,kBAAClB,EAAD,CAAQN,KAAK,SAASQ,MAAOA,EAAOiB,QA1BxC,0BAAAC,EAAAC,OAAA,oDACMnB,EADN,wDAGMM,EAAYC,KAAKC,MAAMxC,aAAaC,QAAQ,kBAEtCqB,KAAKa,GAEfnC,aAAaqB,QAAQ,eAAgBkB,KAAKa,UAAUd,IAEpDF,GAAS,GATX,WAAAc,EAAA,MAWQG,EAAIC,KAAJ,gBAAkBnB,EAAMS,OAXhC,uCA2BOT,EAAMoB,Q,0mDC5DR,IAAMlD,EAAYC,IAAOC,IAAV,K,QCAhBiD,E,MAAKC,GAAO,4CAElBC,YAAW,WACTC,QAAQC,IAAI,uBAAqBJ,EAAGK,MACnC,KAEYL,QCIA,SAASM,IAAY,IAAD,EACLhD,mBAAS,IADJ,mBAC1BiD,EAD0B,KAClBC,EADkB,OAGPlD,mBAAS,IAHF,mBAG1BqB,EAH0B,KAGnB8B,EAHmB,OAIhBnD,mBAASd,aAAaC,QAAQ,gBAAxC6C,EAJ0B,oBA8BjC,SAAeoB,IAAf,eAAAhB,EAAAC,OAAA,kEAAAD,EAAA,MACyBG,EAAIc,IAAI,WADjC,OACQC,EADR,OAGEJ,EAAUI,EAASC,MAHrB,qCAMA,OA9BA3D,EAAc,eAAD,OAAgBoC,EAAOC,MAAM,KAAK,KAmB/CV,qBAAU,WALRmB,EAAGc,GAAG,QAASJ,GAEfV,EAAGc,GAAG,OAAQJ,GAKdA,MACC,IASD,kBAAC,EAAD,KACE,6BACE,yBACEjD,IAAI,yEACJC,IAAI,YAGN,kBAAC,IAAD,CAAMqD,UApCZ,qBAAArB,EAAAC,OAAA,mDACkB,KADlB,EAAgCqB,QAAhC,mEAAAtB,EAAA,MAGQG,EAAIC,KAAK,SAAU,CACvBR,SACAE,QAASb,KALb,OAQE8B,EAAS,IARX,uCAqCQ,kBAAC,IAAD,CACEQ,MAAOtC,EACPf,KAAK,QACLsD,UAAU,MACVnD,YAAY,6BACZoD,SAAU,SAAAC,GAAC,OAAIX,EAASW,EAAEC,OAAOJ,WAIrC,8BACKV,GACDA,EAAOe,KAAI,SAAAnC,GAAI,OAAI,kBAACT,EAAD,CAAOC,MAAOQ,EAAMoC,IAAKpC,EAAKC,YC5D9C,SAASoC,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAOC,KAAK,qBAAqBC,OAAK,EAACtF,UAAWiB,IAClD,kBAAC,EAAD,CAAOoE,KAAK,6BAA6BrF,UAAWkE,EAAUjE,UAAQ,IACtE,kBAAC,IAAD,CAAUsF,KAAK,IAAIjF,GAAG,wB,kPCXbkF,kBAAf,KCEAC,IAASlF,OAAO,mBCKD,WACb,OACE,kBAAC,IAAD,CAAQK,QAASA,EAAS8E,SAAUC,qBAClC,kBAAC,EAAD,MAEA,kBAAC,EAAD,SDVU,MAAS3E,SAAS4E,eAAe,U,mBEJjDC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.cd68447c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function RouteWrapper({\n  component: Component,\n  isLogged,\n  ...rest\n}) {\n  const signed = localStorage.getItem(\"@Tweet:name\");\n\n  if (!signed && isLogged) {\n    return <Redirect to=\"/twitter-frontend/\" />;\n  }\n\n  if (signed && !isLogged) {\n    return <Redirect to=\"/twitter-frontend/timeLine\" />;\n  }\n\n  return <Route {...rest} render={props => <Component {...props} />} />;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background: #1da1f2;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  div {\n    width: 100%;\n    max-width: 300px;\n    height: 320px;\n    background: white;\n    border-radius: 4px;\n\n    box-shadow: 0px 16px 12px 0px rgba(0, 0, 0, 0.1);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n\n    padding: 40px;\n\n    img {\n      max-width: 80px;\n      margin-bottom: 30px;\n    }\n\n    form {\n      width: 100%;\n      margin-top: 30px;\n      display: flex;\n      flex-direction: column;\n\n      input {\n        display: block;\n        outline: none;\n\n        border: 1px solid rgba(0, 0, 0, 0.1);\n        border-radius: 2px;\n        padding: 15px;\n        font-family: Arial, Helvetica, sans-serif;\n        font-size: 12px;\n\n        color: #333;\n\n        &:placeholder-shown,\n        &::placeholder,\n        &::-moz-placeholder {\n          color: #333;\n        }\n      }\n\n      p {\n        color: red;\n        font-size: 12px;\n        font-weight: bold;\n        font-family: Arial, Helvetica, sans-serif;\n      }\n\n      button {\n        cursor: pointer;\n        margin-top: 20px;\n        background: #1da1f2;\n        height: 45px;\n        border: none;\n        outline: none;\n        box-shadow: none;\n\n        border-radius: 2px;\n\n        font-size: 14px;\n        font-weight: bold;\n        font-family: Arial, Helvetica, sans-serif;\n\n        color: white;\n      }\n    }\n  }\n`;\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nexport default history;\n","const documentTitle = title => (document.title = `${title} | Twitter`);\nexport default documentTitle;\n","import React, { useState } from \"react\";\nimport { Form, Input } from \"@rocketseat/unform\";\n\nimport { Container } from \"./styles\";\n\nimport history from \"../../services/history\";\n\nimport documentTitle from \"../../utils/documentTitle\";\n\nexport default function SignIn() {\n  documentTitle(\"Login\");\n\n  const [error, setError] = useState(null);\n\n  function handleSubmit({ name }) {\n    if (!name) {\n      setError(\"O Nome de usuário é obrigatório!\");\n\n      return false;\n    }\n\n    localStorage.setItem(\"@Tweet:name\", name);\n\n    history.push(\"/tweets\");\n  }\n  return (\n    <Container>\n      <div>\n        <img\n          src=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-1.png\"\n          alt=\"Twitter\"\n        />\n\n        <Form onSubmit={handleSubmit}>\n          <Input name=\"name\" placeholder=\"Nome de usuário\" type=\"text\" />\n          {error && <p>{error}</p>}\n          <button type=\"submit\">Entrar</button>\n        </Form>\n      </div>\n    </Container>\n  );\n}\n","import axios from \"axios\";\n\nconst app = axios.create({\n  baseURL: \"https://mk-twitter-backend.herokuapp.com\"\n});\n\nexport default app;\n","import styled from \"styled-components\";\n\nimport like from \"../../images/like.svg\";\nimport liked from \"../../images/liked.svg\";\n\nexport const Container = styled.li`\n  margin-top: 10px;\n  padding: 20px;\n  color: #3e3e3e;\n\n  + li {\n    border-top: 1px solid #eee;\n  }\n  strong {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px;\n    color: #4a4a4a;\n    font-weight: bold;\n\n    display: flex;\n    align-items: center;\n\n    img {\n      margin: 0 !important;\n      padding: 0;\n      padding-right: 10px;\n      border-radius: 2px;\n    }\n  }\n\n  p {\n    font-family: Arial, Helvetica, sans-serif;\n    border-radius: 20px;\n    color: #333;\n    padding: 15px;\n    font-size: 14px;\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  outline: none;\n  background: transparent;\n  position: relative;\n  display: block;\n  margin-left: 25px;\n\n  font-size: 13px;\n  font-weight: normal;\n  color: #333;\n\n  &:before {\n    content: \"\";\n    position: absolute;\n    right: 20px;\n    top: 0;\n    bottom: 0;\n    margin: auto 0;\n    width: 25px;\n    height: 20px;\n    background: url(${props => (props.liked ? liked : like)});\n    background-size: contain;\n    background-repeat: no-repeat;\n  }\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport api from \"../../services/api\";\n\nimport { Container, Button } from \"./styles\";\n\nexport default function Tweet({ tweet }) {\n  const [liked, setLiked] = useState(false);\n\n  function alreadyLiked() {\n    let userLikes = localStorage.getItem(\"@Tweet:likes\");\n\n    if (!userLikes) {\n      localStorage.setItem(\"@Tweet:likes\", \"[]\");\n\n      return setLiked(false);\n    }\n\n    userLikes = JSON.parse(userLikes);\n\n    if (!userLikes.length) {\n      return setLiked(false);\n    }\n\n    const find = userLikes.find(item => item._id === tweet._id);\n\n    if (!find) {\n      return setLiked(false);\n    }\n\n    return setLiked(true);\n  }\n\n  useEffect(() => alreadyLiked(), []);\n\n  async function handleLike() {\n    if (liked) return;\n\n    let userLikes = JSON.parse(localStorage.getItem(\"@Tweet:likes\"));\n\n    userLikes.push(tweet);\n\n    localStorage.setItem(\"@Tweet:likes\", JSON.stringify(userLikes));\n\n    setLiked(true);\n\n    await api.post(`likes/${tweet._id}`);\n  }\n\n  return (\n    <Container>\n      <strong>\n        <img\n          src={`https://api.adorable.io/avatars/50/${\n            tweet.author.split(\" \")[0]\n          }`}\n          alt={tweet.author}\n        />\n        {tweet.author}\n      </strong>\n      <p>{tweet.content}</p>\n      <Button type=\"button\" liked={liked} onClick={handleLike}>\n        {tweet.likes}\n      </Button>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  background: rgb(236, 241, 248, 0.3);\n\n  div {\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    flex-direction: column;\n\n    padding-top: 100px;\n    img {\n      max-width: 30px;\n      margin-bottom: 30px;\n    }\n\n    form {\n      position: relative;\n      display: flex;\n      width: 100%;\n      max-width: 600px;\n      padding: 15px;\n      background: rgba(0, 0, 0, 0.02);\n      border-radius: 5px;\n\n      textarea {\n        padding: 15px;\n        width: 100%;\n        height: 50px;\n        resize: none;\n\n        border: 5px solid rgb(236, 241, 248);\n        outline: none;\n        box-shadow: none;\n        border-radius: 5px;\n\n        font-size: 14px;\n        font-family: Arial, Helvetica, sans-serif;\n        color: #333;\n        &:placeholder-shown,\n        &::placeholder,\n        &::-moz-placeholder {\n          color: #333;\n        }\n      }\n    }\n\n    ul {\n      position: relative;\n      margin: 0;\n      padding: 0;\n      width: 100%;\n      max-width: 600px;\n\n      list-style: none;\n      max-height: 66vh;\n      overflow-y: auto;\n\n      &::-webkit-scrollbar-track {\n        background-color: transparent;\n      }\n      &::-webkit-scrollbar {\n        width: 3px;\n        height: 10px;\n        background-color: transparent;\n      }\n      &::-webkit-scrollbar-thumb {\n        background-color: transparent;\n      }\n    }\n  }\n`;\n","import socket from \"socket.io-client\";\n\nconst io = socket(\"https://mk-twitter-backend.herokuapp.com\");\n\nsetTimeout(() => {\n  console.log(\"usuário conectado\", io.id);\n}, 500);\n\nexport default io;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Textarea } from \"@rocketseat/unform\";\n\nimport Tweet from \"../../components/Tweet\";\n\nimport { Container } from \"./styles\";\n\nimport api from \"../../services/api\";\nimport io from \"../../utils/ws\";\nimport documentTitle from \"../../utils/documentTitle\";\n\nexport default function TimeLine() {\n  const [tweets, setTweets] = useState([]);\n\n  const [tweet, setTweet] = useState(\"\");\n  const [author] = useState(localStorage.getItem(\"@Tweet:name\"));\n\n  documentTitle(`TimeLine de ${author.split(\" \")[0]}`);\n\n  async function handleNewTweet({ keyCode }) {\n    if (keyCode !== 13) return;\n\n    await api.post(\"tweets\", {\n      author,\n      content: tweet\n    });\n\n    setTweet(\"\");\n  }\n\n  function waitingChange() {\n    io.on(\"Tweet\", getTweets);\n\n    io.on(\"Like\", getTweets);\n  }\n\n  useEffect(() => {\n    waitingChange();\n    getTweets();\n  }, []);\n\n  async function getTweets() {\n    const response = await api.get(\"tweets\");\n\n    setTweets(response.data);\n  }\n\n  return (\n    <Container>\n      <div>\n        <img\n          src=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-1.png\"\n          alt=\"Twitter\"\n        />\n\n        <Form onKeyDown={handleNewTweet}>\n          <Textarea\n            value={tweet}\n            name=\"tweet\"\n            maxLength=\"255\"\n            placeholder=\"O que está acontecendo?\"\n            onChange={e => setTweet(e.target.value)}\n          />\n        </Form>\n\n        <ul>\n          {!!tweets &&\n            tweets.map(item => <Tweet tweet={item} key={item._id} />)}\n        </ul>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Switch, Redirect } from \"react-router-dom\";\n\nimport Route from \"./Route\";\n\nimport SignIn from \"../pages/SignIn\";\nimport TimeLine from \"../pages/TimeLine\";\n\nexport default function routes() {\n  return (\n    <Switch>\n      <Route path=\"/twitter-frontend/\" exact component={SignIn} />\n      <Route path=\"/twitter-frontend/timeLine\" component={TimeLine} isLogged />\n      <Redirect from=\"*\" to=\"/twitter-frontend/\" />\n    </Switch>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  html,body { \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n    -webkit-font-smoothing: antialiased;\n  }\n\n  #root {\n    min-height: 100vh;\n  }\n\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\n\nimport Routes from \"./routes\";\n\nimport GlobalStyle from \"./style/globalStyle\";\n\nimport history from \"./services/history\";\n\nexport default function App() {\n  return (\n    <Router history={history} basename={process.env.PUBLIC_URL}>\n      <Routes />\n\n      <GlobalStyle />\n    </Router>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/like.f471bb19.svg\";","module.exports = __webpack_public_path__ + \"static/media/liked.b268a305.svg\";"],"sourceRoot":""}